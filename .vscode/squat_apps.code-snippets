{
    // Place your SQUAT-APPS workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
    // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
    // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
    // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
    // Placeholders with the same ids are connected.
    // Example:
    // "Print to console": {
    // 	"scope": "javascript,typescript",
    // 	"prefix": "log",
    // 	"body": [
    // 		"console.log('$1');",
    // 		"$2"
    // 	],
    // 	"description": "Log output to console"
    // }
    // https://snippet-generator.app/

    "Creates a class structure for a page file in Page Object Model (POM).": {
        "prefix": "pageClass",
        "body": [
            "/**",
            " * Base class containing common selectors",
            " */",
            "class PageNameSelectors {}",
            "",
            "/**",
            " * Class containing validation methods",
            " */",
            "class PageNameValidation extends PageNameSelectors {}",
            "",
            "/**",
            " * Class containing action methods",
            " */",
            "class PageNameAction extends PageNameValidation {}",
            "",
            "/**",
            " * Class containing use case methods.",
            " * Use extends methods from action class and validation class only",
            " */",
            "class PageName extends PageNameAction {}",
            "",
            "export default new PageName();",
            ""
        ],
        "description": "Creates a class structure for a page file in Page Object Model (POM)."
    },

    "Creates a class structure for API collections and use case methods.": {
        "prefix": "apiClass",
        "body": [
            "import axios from \"axios\";",
            "import { dotenvConf } from \"../../../config/dotenv.js\";",
            "",
            "/**",
            " * Base class containing api collections",
            " */",
            "class NameApiCollections {}",
            "",
            "/**",
            " * Class containing use case methods.",
            " * Use extends methods from fhapApiCollections class only",
            " */",
            "class NameApi extends NameApiCollections {}",
            "",
            "export default new NameApi();",
            ""
        ],
        "description": "Creates a class structure for API collections and use case methods."
    },

    "Defines a test structure using WebdriverIO with Mocha, including session cleanup and Allure reporting.": {
        "prefix": "specTest",
        "body": [
            "import Cleanup from \"../handlers/sessions_cleanup.js\";",
            "import allureReporter from \"@wdio/allure-reporter\";",
            "",
            "/**",
            " * Write feature name in \"describe\" block.",
            " * Write test-case title in \"it\" block.",
            " */",
            "describe(\"Feature Name\", () => {",
            "    afterEach(async () => {",
            "        await Cleanup.relaunch_app(",
            "            browser.capabilities.platformName,",
            "            dotenvConf.wdioAppId",
            "        );",
            "    });",
            "",
            "    it(\"Test case title @regression @smoke\", async () => {",
            "        allureReporter.addParentSuite(\"Regression\");",
            "        allureReporter.addParentSuite(\"Smoke\");",
            "        allureReporter.addSeverity(\"critical\");",
            "",
            "        // Define test paramaters here",
            "",
            "        // Write test steps here",
            "    });",
            "});",
            ""
        ],
        "description": "Defines a test structure using WebdriverIO with Mocha, including session cleanup and Allure reporting."
    },

    "Defines a test suite using WebdriverIO with Mocha, including session cleanup after each test and Allure reporting for test categorization and severity tracking.": {
        "prefix": "specDescribe",
        "body": [
            "describe(\"Feature Name\", () => {",
            "    afterEach(async () => {",
            "        await Cleanup.relaunch_app(",
            "            browser.capabilities.platformName,",
            "            dotenvConf.wdioAppId",
            "        );",
            "    });",
            "",
            "    it(\"Test case title @regression @smoke\", async () => {",
            "        allureReporter.addParentSuite(\"Regression\");",
            "        allureReporter.addParentSuite(\"Smoke\");",
            "        allureReporter.addSeverity(\"critical\");",
            "",
            "        // Define test paramaters here",
            "",
            "        // Write test steps here",
            "    });",
            "});",
            ""
        ],
        "description": "Defines a test suite using WebdriverIO with Mocha, including session cleanup after each test and Allure reporting for test categorization and severity tracking."
    },

    "Defines a test case in WebdriverIO with Mocha, including Allure reporting for test categorization and severity tracking.": {
        "prefix": "specIt",
        "body": [
            "    it(\"Test case title @regression @smoke\", async () => {",
            "        allureReporter.addParentSuite(\"Regression\");",
            "        allureReporter.addParentSuite(\"Smoke\");",
            "        allureReporter.addSeverity(\"critical\");",
            "",
            "        // Define test paramaters here",
            "",
            "        // Write test steps here",
            "    });",
            "",
            ""
        ],
        "description": "Defines a test case in WebdriverIO with Mocha, including Allure reporting for test categorization and severity tracking."
    }
}
